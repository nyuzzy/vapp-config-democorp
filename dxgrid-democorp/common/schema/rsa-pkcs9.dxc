#
# Computer Associates
#
# config/schema/rsa-pkcs9.dxc ($Id: rsa-pkcs9.dxc,v 4.3 2003/05/15 02:05:58 martin Exp $ )
#
# PKCS #9 Selected Object Classes and Attribute Types
#
# Based on the document "PKCS #9 v2.0: Selected Object Classes and Attribute Types"
# from http://www.rsasecurity.com/rsalabs/PKCS/PKCS-9/
#
# Requires definitions from x500.dxc (serialNumber) and inetop.dxc (userPKCS12)
#
schema set oid-prefix pkcs9-attr = (1.2.840.113549.1.9);
schema set oid-prefix pkcs9-attr2 = (1.2.840.113549.1.9.25);
schema set oid-prefix pkcs9-attr3 = (1.3.6.1.5.5.7.9);
schema set oid-prefix pkcs9-oc   = (1.2.840.113549.1.9.24);

#
#	Syntaxes
#
# PKCS9String
# The encoding of a value in this syntax is the string value itself.
#	1.2.840.113549.1.9.26.1
#	DESC 'PKCS9String'

# SigningTime
# Values in this syntax are encoded as printable strings, represented as specified in [5].  
# Note that the time zone must be specified. For example, "199412161032Z"
#	1.2.840.113549.1.9.26.2
#	DESC 'SigningTime'

#
# Matching rules
#

# pkcs9CaseIgnoreMatch
#	1.2.840.113549.1.9.27.1
#	NAME 'pkcs9CaseIgnoreMatch' 
#	SYNTAX 1.2.840.113549.1.9.26.1

# signingTimeMatch 
#	1.2.840.113549.1.9.27.3
#	NAME 'signingTimeMatch' 
#	SYNTAX 1.2.840.113549.1.9.26.2



#
#	Attribute Definitions
#

# userPKCS12
# This attribute is to be stored and requested in binary form, as userPKCS12;binary.
# The attribute values are PFX PDUs stored as binary (BER- or DER-encoded) data.

# Defined in inetop.dxc!!!

#schema set attribute (2.16.840.1.113730.3.1.216) = {
#	name = userPKCS12
#	ldap-name = userPKCS12
#	syntax = binary
#	description = "PKCS #12 PFX PDU for exchange of personal information"
#};


# pKCS15Token
# This attribute is to be stored and requested in binary form, as pKCS15Token;binary. 
# The attribute values are PKCS15Token PDUs stored as binary (BER- or DER-encoded) data.
# schema set attribute (1.2.840.113549.1.9.25.1) = {
schema set attribute pkcs9-attr2:1 = {
      	name = pKCS15Token
	syntax = binary
	description = "PKCS #15 token PDU"
};


# encryptedPrivateKeyInfo
# This attribute is to be stored and requested in binary form, as encryptedPrivateKeyInfo;binary. The attribute values are EncryptedPrivateKeyInfo PDUs stored as binary (BER- or DER-encoded) data.
schema set attribute pkcs9-attr2:2 = {
	name = encryptedPrivateKeyInfo
	syntax = binary
	description = "PKCS #8 encrypted private key info"
};

# pKCS7PDU
# This attribute is to be stored and requested in binary form, as pKCS7PDU;binary. The attribute values are BER- or DER-encoded ContentInfo values.
schema set attribute pkcs9-attr2:5 = {
	name = pKCS7PDU
	ldap-names = pKCS7PDU
	syntax = binary
	description = "PKCS #7 ContentInfo PDU"
};


# emailAddress
#	EQUALITY pkcs9CaseIgnoreMatch
#	SYNTAX 1.3.6.1.4.1.1466.115.121.1.26
# Note: This attribute is also defined in entrust.dxc
schema set attribute pkcs9-attr:1 = {
	name = emailAddress
	ldap-names = emailAddress, email
	syntax = caseIgnoreIA5String
	description = "Email address"
};

# Commented out because the PKCS9String syntax is not supported by dsa.
# unstructuredName
#	EQUALITY pkcs9CaseIgnoreMatch
#	SYNTAX 1.2.840.113549.1.9.26.1
# schema set attribute pkcs9-attr:2 = {
# 	name = unstructuredName
# 	syntax = PKCS9String
# 	description = "PKCS #9 unstructured name"
# }; 

# contentType
# In the (highly unlikely) event of this attribute being stored in a Directory it is to be stored and requested in binary form, as contentType;binary. Attribute values shall be OCTET STRINGs stored as binary (BER- or DER-encoded) data.
schema set attribute pkcs9-attr:3 = {
	name = contentType
	syntax = objectIdentifier
	single-valued
	description = "PKCS #7 content type attribute"
};

# messageDigest
# In the (highly unlikely) event of this attribute being stored in a Directory it is to be stored and requested in binary form, as messageDigest;binary. Attribute values shall be OCTET STRINGs stored as binary (BER- or DER-encoded) data.
#	EQUALITY octetStringMatch
#	SYNTAX 1.3.6.1.4.1.1466.115.121.1.5
schema set attribute pkcs9-attr:4 = {
	name = messageDigest
	syntax = binary
	single-valued
	description = "PKCS #7 mesage digest attribute"
};

# signingTime
#	EQUALITY signingTimeMatch
#	SYNTAX 1.2.840.113549.1.9.26.2

# Commented out because the signingTime syntax is not supported by dsa.
#schema set attribute pkcs9-attr:5 = {
#	name = signingTime
#	syntax = SigningTime
#	single-valued
#	description = "PKCS #7 signing time"
#};

# counterSignature
# In the (highly unlikely) event that this attribute is to be stored in a directory, it is to be stored and requested in binary form, as counterSignature;binary. Attribute values shall be stored as binary (BER- or DER-encoded) data.
schema set attribute pkcs9-attr:6 = {
	name = counterSignature
	syntax = binary
	description = "PKCS #7 countersignature"
};

# challengePassword
# Note - It is not recommended to store unprotected values of this attribute in a directory.
#	EQUALITY caseExactMatch
#	SYNTAX 1.3.6.1.4.1.1466.115.121.1.15
schema set attribute pkcs9-attr:7 = {
	name = challengePassword
	syntax = caseExactString
	single-valued
	description = "Challenge password for certificate revocations"
};


# unstructuredAddress
#	EQUALITY caseIgnoreMatch
#	SYNTAX 1.3.6.1.4.1.1466.115.121.1.15
schema set attribute pkcs9-attr:8 = {
	name = unstructuredAddress
	syntax = caseIgnoreString
	description = "PKCS #9 unstructured address"
};


# dateOfBirth
schema set attribute pkcs9-attr3:1 = {
	name = dateOfBirth
	syntax = generalizedTime
	single-valued
	description = "Date of birth"
};

# placeOfBirth
#	EQUALITY caseExactMatch
#	SYNTAX 1.3.6.1.4.1.1466.115.121.1.15
schema set attribute pkcs9-attr3:2 = {
	name = placeOfBirth
	syntax = caseExactString
	single-valued
	description = "Place of birth"
};

# gender
#	EQUALITY caseIgnoreMatch
#	SYNTAX 1.3.6.1.4.1.1466.115.121.1.44
schema set attribute pkcs9-attr3:3 = {
	name = gender
	syntax = printableString
	single-valued
	description = "Gender"
};

# countryOfCitizenship
#	EQUALITY caseIgnoreMatch
#	SYNTAX 1.3.6.1.4.1.1466.115.121.1.44
schema set attribute pkcs9-attr3:4 = {
	name = countryOfCitizenship
	syntax = printableString
	description = "Country of citizenship"
};

# countryOfResidence
#	EQUALITY caseIgnoreMatch
#	SYNTAX 1.3.6.1.4.1.1466.115.121.1.44
schema set attribute pkcs9-attr3:5 = {
	name = countryOfResidence
	syntax = printableString
	description = "Country of residence"
};

# pseudonym
#	EQUALITY caseExactMatch
#	SYNTAX 1.3.6.1.4.1.1466.115.121.1.15
schema set attribute (2.5.4.65) = {
	name = pseudonym
	syntax = caseExactString
	description = "Pseudonym"
};


#
#	Auxillary Class Definitions
#

# pkcsEntity
schema set object-class pkcs9-oc:1 = {
	name = pkcsEntity
	subclass-of top
	kind = auxiliary
	may-contain 
		pKCS7PDU,
		userPKCS12,
		pKCS15Token,
		encryptedPrivateKeyInfo
};

# naturalPerson
schema set object-class pkcs9-oc:2 = {
	name = naturalPerson
	subclass-of top
	kind = auxiliary
	may-contain
		emailAddress,
#		unstructuredName,
		unstructuredAddress,
		dateOfBirth,
		placeOfBirth,
		gender,
		countryOfCitizenship,
		countryOfResidence,
		pseudonym,
		serialNumber
};

